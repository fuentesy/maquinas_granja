<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEBQUEBQQEBASFBYVFRAVFhAXEBAPFhUWFxcSFRQY
        HCogGBolHBUUITEhJSkrMC4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBorJB8kLiwsMCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCAC6AQ4DAREAAhEBAxEB/8QA
        HAABAAEFAQEAAAAAAAAAAAAAAAcBAwQFBgII/8QARxAAAQMCAgUIBQkHAQkAAAAAAQACAxETBBIFBhQh
        MSJBUVJhcZPSBzJUkrIjMzVyc4GRobEkQmJ0g7PBoiU0ZIKj0eHw8f/EABoBAQACAwEAAAAAAAAAAAAA
        AAABAwIEBQb/xAAwEQEAAQQABAQGAQQDAQAAAAAAAQIDERIEEyGRFTFSYQUiM0FRcTIUgbHwI8HRof/a
        AAwDAQACEQMRAD8AnFAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBBg6V0k
        yBgLquc40ZG315HcaAfmTwA3lJYV1xTHVz8uKnl3yyOjB4RRHKGjodJTM49oyjsWKjaqrzn+0f8Aq1YZ
        1p/HxHnRGI/M95LDOtP4+I86GPee8lhnWn8fEedDHvPeSwzrT+PiPOhj3nvJYZ1p/HxHnQx7z3ksM60/
        j4jzoY957yWGdafx8R50Me895LDOtP4+I86GPee8lhnWn8fEedDHvPeSwzrT+PiPOhj3nvJYZ1p/HxHn
        Qx7z3ksM60/j4jzoY957yWGdafx8R50Me895LDOtP4+I86GPee8lhnWn8fEedDHvPeSwzrT+PiPOhj3n
        vJYZ1p/HxHnQx7z3ksM60/j4jzoY957yWGdafx8R50Me895LDOtP4+I86GPee8lhnWn8fEedDHvPeSwz
        rT+PiPOhj3nvJYZ1p/HxHnQx7z3ksM60/j4jzoY957yWGdafx8R50Me895LDOtP4+I86GPee8lhnWn8f
        EedDHvPeSw3rzj+viPOhiPzPeV+HHTxb2PMzOeKQjNT+CXiD2OrXpCJiuqn75dDo3HsmZnYTStC07nMe
        OLXDmIWWWxTXFUZhloyUcUHAzaQvSumPA1ZGOrADuPe4jNXoLRzLFozXtOTaEMm0IZNoQybQhk2hDJtC
        GTaEMm0IZNoQybQhk2hDJtCGTaEMm0IZNoQybQhk2hDJtCGTaEMm0IZNoQybQhk2hDJtCGTaEMm0IZNo
        QybQhk2hDJtCGVzRukLOIY+tGSubFIOYlxyxv7w4hteh3YETRXrU7oLJusDWGcx4TEPbuLIJXA9BbG4j
        9EV3ZxRVPtKNopg1oA4AAfcBRYOdEve0InY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2
        hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDY2hDZZxk/yb+nK
        4jsIFQfxARE1dEr4STNG13Wa0/iAVm6keTXa2f7hi/5ab+25RKu/9Kr9SigYhYOVsbSmU5NpTJk2lMmT
        aEyjLptB6sPxMLZbrWNdXdlLjuNOkdCmIbNvh5rp2y2R1FNPn9/2e74lOq3+l92m01q5iMO0v3Sxji5l
        atHSW8wUTEwpuWKqOvnDQbSoyoybShk2lEZNpROTaUyZNpQybShk2lDJtKZRk2lMpybShk2lDJtKGTaU
        Mm0oZNpTJk2lMmTaUMqumI41FRXfzjpTJlTaUMm0pkybSmTJtKZMreIxHId9V36FETV0TTo75mP7Nnwh
        WOzT5Qwdbfo/F/y039tyifJXf+lV+pQkMQqsuJsbQmTY2hMmxtCZNjaEybJf1AdXR8Z7X/GVZT5Ovwv0
        oRfPpmdsriJZgQ91KPfuo49qwzLmTdqifOf9lK2qONfiMDG+fe5wcCTSj2hxaHHvAVkTmHV4eua7cTUi
        L15rcW/NIWM30rV9Gb+bmVeerkedWIbLS2r2Mw0dydrWsqG1D2k5jw3BJiYW12blEbVQ1WGLpHtYze55
        DQK0q4mg3qFVMzM4htdLau4vDR3J2tayobUPa41PDcFMxMLblq5bjNTWYOOSZ4ZE10j3cGjj39g7Siqn
        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
        3Lf4b4XbtzmrrLr8H8Ft0TtXOUi4HBxwsbHE1scbBRrG8AAurD0FMRTGIZCJEGj09pVzPk4qXXCpfxET
        OmnOTzBV3LkURmWtxF+LcYjzc8yAAlxq554vdveT2krl3LldfnLiXKq7k5mV1U8tVyxOWcoTlnKE5Zyh
        OWcoTlnKE5ZyhOWcoTlnKE5ZyhOWcoTlnKE5ZyhOWcoTlnKE5ZyhOWcoTlnKE5ZyhOWcoTlnKE5ZyhOW
        coTlnKE5ZyhOWcoTlnKE5Zy3gR0dmYTG8cHt3H7+kd6vtXa6Pv0X2rlduekun0JpO6C14AlbxA4OHXHY
        upRXFcZh27F6LlLaBZr3l7qAk8AK/cEHGVLi559Z5zH/AAPwotK9mqpyL3z1K5VVqq0MqamhlTU0Mqam
        hlTU0MqamhlTU0MqamhlTU0MqamhlTU0MqamhlTU0MqamhlTU0MqamhlTU0MqamhlTU0MqamhlTU0Mqa
        mhlTU0MqamhlTU0MqamhlTU0MqamhlTU0Mqamj3hpCyRjxzEA9rDud/3+5XWJ1qwv4eZordgFuOqs4/5
        p/1HfoURV5OZbHuWrNPVztVbajVGpbU6mpbTU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1Laampb
        TU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1LaampbTU1LajU1
        eZI9x7llTHVMU9XVxeqO4LZdKHjFj5N/1T+iIq8mktKrDV1LSao1LSampaTU1LSampaTU1LSampaTU1L
        SampaTU1LSampaTU1LSampaTU1LSampaTU1LSampaTU1LSampaTU1LSampaTU1LSampaTU1LSampaTU1
        LSampaTU1LSampaTU1LSYNVHRbkiExS6CPgO4K1tvM45J7iiJ8mBaWKrBaTBgtJgwWkwYLSYMFpMGC0m
        DBaTBgtJgwWkwYLSYMFpMGC0mDBaTBgtJgwWkwYLSYMFpMGC0mDBaTBgtJgwWkwYLSYMFpMGC0mDBaTB
        gtJgwWkwYLSYMFpMGC0hhQwoYbNvALJcOFQgt2kRhW0hgtIYLSGC0hgtIYLSGC0hgtIYLSGC0hgtIYLS
        GC0hgtIYLSGC0hgtIYLSGC0hgtIYLSGC0hgtIYLSGC0hgtIYLSGC0hgtIYLSGC0hhcCJEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQf//Z
</value>
  </data>
</root>